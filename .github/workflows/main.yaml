name: "Tagged Release Build"

on:
  push:
    tags:
      - 'v*'  # Triggers on tag push like v1.0.0

jobs:
  build:
    name: Build & Distribute
    runs-on: macos-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          architecture: x64

      - name: Install Flutter Dependencies
        run: flutter pub get

      - name: Validate Version Tag
        run: |
          if [[ ! "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid tag format. Must be v<MAJOR>.<MINOR>.<PATCH>"
            exit 1
          fi

      - name: Set Version Info
        id: vars
        run: |
          VERSION_NAME="${GITHUB_REF_NAME#v}"
          VERSION_CODE=$(git tag | grep '^v' | wc -l | xargs)
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV

      - name: Build Android APK (split per ABI)
        run: flutter build apk --release --split-per-abi --build-name="${{ env.VERSION_NAME }}" --build-number="${{ env.VERSION_CODE }}"

      - name: Rename Android APKs
        run: |
          mv build/app/outputs/apk/release/app-armeabi-v7a-release.apk build/app/outputs/apk/release/appname-${{ github.ref_name }}-armeabi-v7a.apk
          mv build/app/outputs/apk/release/app-arm64-v8a-release.apk build/app/outputs/apk/release/appname-${{ github.ref_name }}-arm64-v8a.apk
          mv build/app/outputs/apk/release/app-x86_64-release.apk build/app/outputs/apk/release/appname-${{ github.ref_name }}-x86_64.apk

      - name: Verify APK Exists
        run: test -f build/app/outputs/apk/release/appname-${{ github.ref_name }}-armeabi-v7a.apk

      - name: Install CocoaPods
        run: |
          cd ios
          pod install
        env:
          LANG: en_US.UTF-8

      # Optional iOS build (no signing)
      # - name: Build iOS IPA (no signing)
      #   run: |
      #     flutter build ios --no-codesign
      #     cd build/ios/iphoneos
      #     mkdir -p Payload
      #     cp -r Runner.app Payload/
      #     zip -r appname-${{ github.ref_name }}.ipa Payload

      - name: Install Firebase CLI
        run: curl -sL https://firebase.tools | bash

      - name: Distribute Android APKs to Firebase
        run: |
          for apk in build/app/outputs/apk/release/appname-${{ github.ref_name }}-*.apk; do
            firebase appdistribution:distribute "$apk" \
              --app 1:427445952125:android:7761a2707cbef894149b14 \
              --token "${{ secrets.FIREBASE_TOKEN }}" \
              --testers "biwas@nexdigitalstudio.com"
          done

      # - name: Distribute iOS IPA to Firebase
      #   run: |
      #     firebase appdistribution:distribute build/ios/iphoneos/appname-${{ github.ref_name }}.ipa \
      #       --app 1:427445952125:ios:f3b80f773ddc438d149b14 \
      #       --token "${{ secrets.FIREBASE_TOKEN }}" \
      #       --testers "..."

      - name: Install Sentry CLI
        run: curl -sL https://sentry.io/get-cli/ | bash

      - name: Upload to Sentry (Android symbols)
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}
        run: |
          export SENTRY_ORG=nex-digital-studio
          export SENTRY_PROJECT=flutter
          export SENTRY_RELEASE=${{ github.ref_name }}

          sentry-cli releases new "$SENTRY_RELEASE"
          sentry-cli releases files "$SENTRY_RELEASE" upload-sourcemaps build/
          sentry-cli releases finalize "$SENTRY_RELEASE"

      - name: Upload to GitHub Releases
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/apk/release/appname-${{ github.ref_name }}-armeabi-v7a.apk
            build/app/outputs/apk/release/appname-${{ github.ref_name }}-arm64-v8a.apk
            build/app/outputs/apk/release/appname-${{ github.ref_name }}-x86_64.apk
          tag: ${{ github.ref_name }}
          token: ${{ secrets.TOKEN }}
          body: |
            ðŸš€ Release ${{ github.ref_name }}  
            Automatically generated on tag push.
